/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Beans/Customizer.java to edit this template
 */
package Visual;

import Programa.Host;
import Programa.InfoInmueble;
import Programa.Direccion;
import Programa.Inmueble;
import Programa.MainBNB;
import Programa.Inicio;
import Programa.Validate;
import javax.swing.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

public class AddInmueble extends javax.swing.JPanel {

    String fotografia = "";

    /**
     * Creates new form AdminConsultarUsuarios
     */
    public AddInmueble() {
        initComponents();
        titleError.setVisible(false);
        descriptionError.setVisible(false);
        priceError.setVisible(false);
        guestError.setVisible(false);
        bedroomError.setVisible(false);
        bedError.setVisible(false);
        bathError.setVisible(false);
        serviceError.setVisible(false);
        bathError1.setVisible(false);
    }

    public File openImage() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Selecciona una imagen");
        fileChooser.setAcceptAllFileFilterUsed(false); // Deshabilitar la opción "Todos los archivos"
        fileChooser.addChoosableFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif", "bmp"));

        int result = fileChooser.showOpenDialog(null); // Mostrar el diálogo de seleccion y capturar la respuesta

        // Procesar la respuesta
        if (result == JFileChooser.APPROVE_OPTION) {
            return fileChooser.getSelectedFile();
        }
        return null; // No file was selected or the user cancelled
    }

    public String saveImage(File archivofoto) {
        String directoriodestino = "./src/main/resources/fotosinmuebles"; // Directorio de destino fijo
        Path pathdestino = Paths.get(directoriodestino, archivofoto.getName());

        try {
            // Asegúrate de que el directorio exista
            if (!Files.exists(Paths.get(directoriodestino))) {
                Files.createDirectories(Paths.get(directoriodestino));
            }

            // Copia el archivo al directorio especificado
            Files.copy(archivofoto.toPath(), pathdestino, StandardCopyOption.REPLACE_EXISTING);
            System.out.println("Imagen guardada en: " + pathdestino);
            return pathdestino.toString(); // Devuelve la ruta de la imagen como String
        } catch (IOException ex) {
            System.out.println("Error al guardar la imagen: " + ex.getMessage());
            return null; // Devuelve null si hay un error
        }
    }

    public void loadImage() {
        File fotoFile = openImage();
        if (fotoFile != null) {
            fotografia = saveImage(fotoFile);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        barraarriba = new javax.swing.JPanel();
        logo = new javax.swing.JButton();
        logoLabel = new javax.swing.JLabel();
        mainscr = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        data = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        guestLabel = new javax.swing.JLabel();
        bedroomLabel = new javax.swing.JLabel();
        bedLabel = new javax.swing.JLabel();
        bathLabel = new javax.swing.JLabel();
        servicesLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        titleTextField = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionTextPanel = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        servicesTextPane = new javax.swing.JTextPane();
        photoButton = new javax.swing.JButton();
        numberLabel = new javax.swing.JLabel();
        streetLabel = new javax.swing.JLabel();
        streetTextField = new javax.swing.JTextField();
        numberTextField = new javax.swing.JTextField();
        cityLabel = new javax.swing.JLabel();
        cpLabel = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        cpTextField = new javax.swing.JTextField();
        createBuildingButton = new javax.swing.JButton();
        titleError = new javax.swing.JLabel();
        priceError = new javax.swing.JLabel();
        descriptionError = new javax.swing.JLabel();
        bedroomError = new javax.swing.JLabel();
        guestError = new javax.swing.JLabel();
        bathError = new javax.swing.JLabel();
        bedError = new javax.swing.JLabel();
        serviceError = new javax.swing.JLabel();
        guestSpinner = new javax.swing.JSpinner();
        bedroomSpinner = new javax.swing.JSpinner();
        bedSpinner = new javax.swing.JSpinner();
        bathSpinner = new javax.swing.JSpinner();
        bathError1 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 236, 217));

        barraarriba.setBackground(new java.awt.Color(255, 153, 102));
        barraarriba.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        barraarriba.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo.setBackground(new java.awt.Color(255, 153, 153));
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/airbnb logo - 100x100.png"))); // NOI18N
        logo.setBorderPainted(false);
        logo.setContentAreaFilled(false);
        logo.setDefaultCapable(false);
        logo.setFocusPainted(false);
        logo.setFocusable(false);
        logo.setRequestFocusEnabled(false);
        logo.setRolloverEnabled(false);
        logo.setVerifyInputWhenFocusTarget(false);
        logo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoActionPerformed(evt);
            }
        });
        barraarriba.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 71, 75));

        logoLabel.setFont(new java.awt.Font("Serif", 3, 24)); // NOI18N
        logoLabel.setForeground(new java.awt.Color(255, 90, 95));
        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logos/logopeque.png"))); // NOI18N
        barraarriba.add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 70));

        mainscr.setBackground(new java.awt.Color(255, 102, 102));
        mainscr.setForeground(new java.awt.Color(255, 255, 255));
        mainscr.setText("Volver");
        mainscr.setBorderPainted(false);
        mainscr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainscr.setPreferredSize(new java.awt.Dimension(80, 30));
        mainscr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainscrActionPerformed(evt);
            }
        });
        barraarriba.add(mainscr, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 100, 50));

        jPanel1.setBackground(new java.awt.Color(255, 236, 217));

        jLabel3.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 48)); // NOI18N
        jLabel3.setText("Añada un inmueble");

        jLabel1.setFont(new java.awt.Font("Serif", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 90, 95));

        data.setBackground(new java.awt.Color(255, 250, 248));
        data.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        data.setMaximumSize(new java.awt.Dimension(1000, 1000));
        data.setPreferredSize(new java.awt.Dimension(600, 520));
        data.setRequestFocusEnabled(false);

        titleLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        titleLabel.setText("Título:");

        typeLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        typeLabel.setText("Tipo:");

        descriptionLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        descriptionLabel.setText("Descripción:");

        photoLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        photoLabel.setText("Fotografía:");

        priceLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        priceLabel.setText("Precio por noche:");

        guestLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        guestLabel.setText("Máximo número de huéspedes:");

        bedroomLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        bedroomLabel.setText("Número de habitaciones:");

        bedLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        bedLabel.setText("Número de camas:");

        bathLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        bathLabel.setText("Número  de baños:");

        servicesLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        servicesLabel.setText("Servicios:");

        typeComboBox.setBackground(new java.awt.Color(255, 153, 102));
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casa", "Apartamento" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        jScrollPane2.setMinimumSize(new java.awt.Dimension(300, 50));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 50));

        titleTextField.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        titleTextField.setMinimumSize(new java.awt.Dimension(300, 50));
        titleTextField.setPreferredSize(new java.awt.Dimension(300, 60));
        jScrollPane2.setViewportView(titleTextField);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(300, 50));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(300, 50));

        descriptionTextPanel.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        descriptionTextPanel.setMinimumSize(new java.awt.Dimension(300, 50));
        descriptionTextPanel.setPreferredSize(new java.awt.Dimension(300, 60));
        jScrollPane3.setViewportView(descriptionTextPanel);

        jScrollPane4.setMinimumSize(new java.awt.Dimension(300, 50));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(300, 50));

        servicesTextPane.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        servicesTextPane.setMinimumSize(new java.awt.Dimension(300, 50));
        servicesTextPane.setPreferredSize(new java.awt.Dimension(300, 60));
        jScrollPane4.setViewportView(servicesTextPane);

        photoButton.setBackground(new java.awt.Color(255, 153, 102));
        photoButton.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        photoButton.setText("Añadir fotografía");
        photoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoButtonActionPerformed(evt);
            }
        });

        numberLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        numberLabel.setText("Número:");

        streetLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        streetLabel.setText("Calle:");

        streetTextField.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        streetTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetTextFieldActionPerformed(evt);
            }
        });

        numberTextField.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        numberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberTextFieldActionPerformed(evt);
            }
        });

        cityLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cityLabel.setText("Ciudad:");

        cpLabel.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cpLabel.setText("Código Postal:");

        cityTextField.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        cityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextFieldActionPerformed(evt);
            }
        });

        cpTextField.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        cpTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpTextFieldActionPerformed(evt);
            }
        });

        createBuildingButton.setBackground(new java.awt.Color(255, 153, 102));
        createBuildingButton.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        createBuildingButton.setText("Crear inmueble");
        createBuildingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBuildingButtonActionPerformed(evt);
            }
        });

        titleError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        titleError.setText("Titulo no válido");

        priceError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        priceError.setText("Tiene que ser superior a 0");

        descriptionError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        descriptionError.setText("Descripción no válida");

        bedroomError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        bedroomError.setText("Tiene que ser superior a 0");

        guestError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        guestError.setText("Tiene que ser superior a 0");

        bathError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        bathError.setText("Tiene que ser superior a 0");

        bedError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        bedError.setText("Tiene que ser superior a 0");

        serviceError.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        serviceError.setText("No es valido");

        guestSpinner.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        guestSpinner.setMinimumSize(new java.awt.Dimension(113, 27));
        guestSpinner.setPreferredSize(new java.awt.Dimension(113, 27));

        bedroomSpinner.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        bedroomSpinner.setMinimumSize(new java.awt.Dimension(113, 27));
        bedroomSpinner.setPreferredSize(new java.awt.Dimension(113, 27));

        bedSpinner.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        bedSpinner.setMinimumSize(new java.awt.Dimension(113, 27));
        bedSpinner.setPreferredSize(new java.awt.Dimension(113, 27));

        bathSpinner.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        bathSpinner.setMinimumSize(new java.awt.Dimension(113, 27));
        bathSpinner.setPreferredSize(new java.awt.Dimension(113, 27));

        bathError1.setFont(new java.awt.Font("Noto Sans SemiBold", 0, 14)); // NOI18N
        bathError1.setText("Tiene que añadir una fotografía");

        priceTextField.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        priceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataLayout = new javax.swing.GroupLayout(data);
        data.setLayout(dataLayout);
        dataLayout.setHorizontalGroup(
            dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bathLabel)
                    .addComponent(bedLabel)
                    .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(dataLayout.createSequentialGroup()
                            .addComponent(priceLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(priceError)
                            .addGap(142, 142, 142))
                        .addGroup(dataLayout.createSequentialGroup()
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bedroomLabel)
                                .addComponent(guestLabel))
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(dataLayout.createSequentialGroup()
                                    .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(dataLayout.createSequentialGroup()
                                            .addGap(55, 55, 55)
                                            .addComponent(serviceError)
                                            .addGap(84, 84, 84))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(guestSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(29, 29, 29)))
                                    .addComponent(bathError))
                                .addGroup(dataLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(bathSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bedroomSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(29, 29, 29)
                                    .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(bedroomError)
                                        .addComponent(guestError)
                                        .addComponent(bedError)))))
                        .addGroup(dataLayout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cityLabel)
                                .addComponent(streetLabel))
                            .addGap(26, 26, 26)
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(33, 33, 33)
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cpLabel)
                                .addComponent(numberLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(dataLayout.createSequentialGroup()
                            .addComponent(photoLabel)
                            .addGap(50, 50, 50)
                            .addComponent(photoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bathError1))
                        .addGroup(dataLayout.createSequentialGroup()
                            .addComponent(servicesLabel)
                            .addGap(14, 14, 14)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(dataLayout.createSequentialGroup()
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(descriptionLabel)
                                .addComponent(titleLabel)
                                .addComponent(typeLabel))
                            .addGap(18, 18, 18)
                            .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(dataLayout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(titleError, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(dataLayout.createSequentialGroup()
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(descriptionError))))))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(dataLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(createBuildingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dataLayout.setVerticalGroup(
            dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataLayout.createSequentialGroup()
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(titleLabel)
                        .addGap(20, 20, 20)
                        .addComponent(typeLabel)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleError, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLabel)
                    .addComponent(cpLabel)
                    .addComponent(cpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberLabel)
                    .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetLabel))
                .addGap(31, 31, 31)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceError)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guestSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guestLabel)
                    .addComponent(bathError))
                .addGap(15, 15, 15)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedroomLabel)
                    .addComponent(bedroomError)
                    .addComponent(bedroomSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bathLabel)
                    .addComponent(bathSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guestError))
                .addGap(8, 8, 8)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dataLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(photoLabel)
                            .addComponent(photoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bathError1)))
                    .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bedError)
                        .addComponent(bedLabel)))
                .addGap(24, 24, 24)
                .addGroup(dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(servicesLabel)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serviceError)
                .addGap(29, 29, 29)
                .addComponent(createBuildingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jLabel1)
                .addContainerGap(543, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 101, Short.MAX_VALUE)
                .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(189, 189, 189))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barraarriba, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(671, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(barraarriba, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 1017));
    }// </editor-fold>//GEN-END:initComponents

    private void logoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoActionPerformed

    private void mainscrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainscrActionPerformed
        // Aplicacion.cardLayout.show(Aplicacion.cards, "Pantalla mainscreenhost");
        Aplicacion.cargaPantallaPrincipal();
    }//GEN-LAST:event_mainscrActionPerformed

    private void priceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTextFieldActionPerformed

    private void createBuildingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBuildingButtonActionPerformed
        Host anfitrion = (Host) Inicio.devolverCliente();
        if (anfitrion == null) {
            JOptionPane.showMessageDialog(this, "Error: el usuario actual no es un anfitrión válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String titulo = titleTextField.getText();
        String descripcion = descriptionTextPanel.getText();
        String calle = streetTextField.getText();
        String numero = numberTextField.getText();
        String ciudad = cityTextField.getText();
        String cp = cpTextField.getText();
        String tipo = (String) typeComboBox.getSelectedItem();
        double precio = 0;
        int huespedes = (int) guestSpinner.getValue();
        int habitaciones = (int) bedroomSpinner.getValue();
        int camas = (int) bedSpinner.getValue();
        int baños = (int) bathSpinner.getValue();
        String servicios = servicesTextPane.getText();
        boolean valido = true;

        // Validar título
        if (titulo.isEmpty()) {
            titleError.setVisible(true);
            valido = false;
        } else {
            titleError.setVisible(false);
        }

        // Validar fotografía
        if (fotografia == null || fotografia.isEmpty()) {
            loadImage();
            if (fotografia == null || fotografia.isEmpty()) {
                bathError1.setVisible(true);
                valido = false;
            } else {
                bathError1.setVisible(false);
            }
        }

        // Validar descripción
        if (descripcion.isEmpty()) {
            descriptionError.setVisible(true);
            valido = false;
        } else {
            descriptionError.setVisible(false);
        }

        // Validar calle
        if (calle.isEmpty() || calle.matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(this, "La calle no puede estar vacía ni contener números.", "Error en la calle", JOptionPane.WARNING_MESSAGE);
            valido = false;
        }

        // Validar número
        int numeroInt = 0;
        if (numero.isEmpty()) {
            JOptionPane.showMessageDialog(this, "La casilla del número del inmueble es necesaria", "Falta el número", JOptionPane.WARNING_MESSAGE);
            valido = false;
        } else {
            try {
                numeroInt = Integer.parseInt(numero);
                if (numeroInt <= 0) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException e) {
                valido = false;
                JOptionPane.showMessageDialog(this, "El número del inmueble debe ser un número entero mayor que 0.", "Error de número", JOptionPane.WARNING_MESSAGE);
            }
        }

        // Validar ciudad
        if (ciudad.isEmpty() || ciudad.matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(this, "La ciudad no puede estar vacía ni contener números.", "Error en la ciudad", JOptionPane.WARNING_MESSAGE);
            valido = false;
        }

        // Validar código postal
        int cpInt = 0;
        if (cp.isEmpty() || cp.length() != 5) {
            JOptionPane.showMessageDialog(this, "El código postal debe tener 5 caracteres exactamente.", "Error del código postal", JOptionPane.WARNING_MESSAGE);
            valido = false;
        } else {
            try {
                cpInt = Integer.parseInt(cp);
            } catch (NumberFormatException e) {
                valido = false;
                JOptionPane.showMessageDialog(this, "El código postal debe ser un número entero.", "Error del código postal", JOptionPane.WARNING_MESSAGE);
            }
        }

        // Validar precio
        try {
            String priceText = priceTextField.getText().trim();
            if (priceText.isEmpty() || !priceText.matches("\\d+(\\.\\d{1,2})?")) {
                throw new NumberFormatException("El precio debe ser un número válido con hasta dos decimales.");
            }
            precio = Double.parseDouble(priceText);
            if (precio <= 0) {
                throw new NumberFormatException("El precio debe ser mayor que 0.");
            }
            priceError.setVisible(false);
        } catch (NumberFormatException e) {
            priceError.setVisible(true);
            valido = false;
            JOptionPane.showMessageDialog(this, "Introduce un precio válido mayor que 0. \nRecuerda usar un punto para los decimales (ej. 233.35).", "Error del precio", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validar huéspedes
        if (huespedes <= 0) {
            guestError.setVisible(true);
            valido = false;
        } else {
            guestError.setVisible(false);
        }

        // Validar habitaciones
        if (habitaciones <= 0) {
            bedroomError.setVisible(true);
            valido = false;
        } else {
            bedroomError.setVisible(false);
        }

        // Validar camas
        if (camas <= 0) {
            bedError.setVisible(true);
            valido = false;
        } else {
            bedError.setVisible(false);
        }

        // Validar baños
        if (baños <= 0) {
            bathError.setVisible(true);
            valido = false;
        } else {
            bathError.setVisible(false);
        }

        // Validar servicios
        if (servicios.isEmpty()) {
            serviceError.setVisible(true);
            valido = false;
        } else {
            serviceError.setVisible(false);
        }

        if (valido) {
            InfoInmueble datos = new InfoInmueble(huespedes, habitaciones, camas, baños);
            Direccion direccion = new Direccion(calle, numero, cp, ciudad);
            Inmueble inmueble = new Inmueble(titulo, descripcion, direccion, datos, tipo, precio, fotografia, servicios, anfitrion);
            boolean inmuebleValido = MainBNB.agregarinmueble(inmueble);
            if (inmuebleValido) {
                JOptionPane.showMessageDialog(this, "El inmueble se ha creado correctamente, se ha añadido a la lista de inmuebles.", "Inmueble creado", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "El inmueble ya existe, no aceptamos inmuebles duplicados.", "Inmueble ya existente", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_createBuildingButtonActionPerformed

    private void cpTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpTextFieldActionPerformed

    private void cityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextFieldActionPerformed

    private void numberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberTextFieldActionPerformed

    private void streetTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetTextFieldActionPerformed

    private void photoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoButtonActionPerformed
        File f = openImage();
        if (f != null) {
            fotografia = saveImage(f);
        } else {
            System.out.println("no existe la ruta");
        }
    }//GEN-LAST:event_photoButtonActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraarriba;
    private javax.swing.JLabel bathError;
    private javax.swing.JLabel bathError1;
    private javax.swing.JLabel bathLabel;
    private javax.swing.JSpinner bathSpinner;
    private javax.swing.JLabel bedError;
    private javax.swing.JLabel bedLabel;
    private javax.swing.JSpinner bedSpinner;
    private javax.swing.JLabel bedroomError;
    private javax.swing.JLabel bedroomLabel;
    private javax.swing.JSpinner bedroomSpinner;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JLabel cpLabel;
    private javax.swing.JTextField cpTextField;
    private javax.swing.JButton createBuildingButton;
    private javax.swing.JPanel data;
    private javax.swing.JLabel descriptionError;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextPane descriptionTextPanel;
    private javax.swing.JLabel guestError;
    private javax.swing.JLabel guestLabel;
    private javax.swing.JSpinner guestSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton logo;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JButton mainscr;
    private javax.swing.JLabel numberLabel;
    private javax.swing.JTextField numberTextField;
    private javax.swing.JButton photoButton;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JLabel priceError;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JLabel serviceError;
    private javax.swing.JLabel servicesLabel;
    private javax.swing.JTextPane servicesTextPane;
    private javax.swing.JLabel streetLabel;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JLabel titleError;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextPane titleTextField;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
